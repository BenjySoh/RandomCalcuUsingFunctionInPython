# -*- coding: utf-8 -*-
"""Random function to calculate

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PZEICRKScn2sbSertmzD5l1MVQbDpTTx
"""

# CalculateTaxiFare

def fare(distance):
    if (distance <= 4):
        km = distance * 2.00
    elif (distance >= 5) and (distance <= 10):
        km = distance * 1.50
    else:
        km = distance * 1.00
    fare = km + 3.00 + 2.00
    return fare

name = input("May I have your name ").title()
age = int(input("May I have your age "))
distance = float(input("May I have the travelled distance "))
discount = fare(distance) * 0.1  
if (age >= 60): 
    displayFare = fare(distance) - discount
else:
    displayFare = fare(distance) 
print(f"Good day to you {name}, the fare would have been \
[${displayFare:.2f}], have a lovely day! ")

# CalculateGstAndDiscountedPrice

def calcShopping(price):
    if (price >= 100):
        CalcGst = price * 0.08
        CalcDisc = price * 0.10
    else:
        CalcGst = price * 0.08
        CalcDisc = 0
    CalcTotalPrice = price + CalcGst - CalcDisc
    return CalcTotalPrice, CalcGst, CalcDisc

calcShopping(95)

price = float(input("Please enter the total price: "))
CalcTotalPrice, CalcGst, CalcDisc = calcShopping(price)
if (price <= 99):
    print(f"The total price payable would have been [${CalcTotalPrice:.2f}].")
    print(f"Inclusive '8%' GST [${CalcGst:.2f}].")
    print(f"There's a interesting discount of '10%' for order above '$100', so don't miss it!")
else:
    print(f"The total price payable would have been [${CalcTotalPrice:.2f}].")
    print(f"Inclusive '8%' GST, amounted to [${CalcGst:.2f}].")
    print(f"Note that the payable price has included the discount of [${CalcDisc:.2f}].")
    
# ASimpleWeightConverterToConvertFromKgToLbsOrViceVersa

def weightConv(WeightInput):
    LbsToKg = WeightInput / 2.205
    KgToLbs = WeightInput * 2.205
    return LbsToKg, KgToLbs


weightConv(100)

#from tqdm.notebook import tqdm
userEntry = 0
while userEntry <= 3:
    WeightInput = float(input("Please enter your weight in 'numeric' e.g. 100: "))
    WeightMeasure = (input("Please define your weight if it's 'Kg' or 'Lbs': ")).lower()
    userEntry += 1
    LbsToKg, KgToLbs = weightConv(WeightInput)
    #for load in tqdm(range(50)):
        #time.sleep(0.1)
    p = print
    if (WeightMeasure == "kg"):
        p(f"If we converted into 'lbs', you're measured at [{KgToLbs:.1f}].")
        break
    elif (WeightMeasure == "lbs"):
        p(f"If we converted into 'Kg', you're measured at [{LbsToKg:.1f}].")
        break
    else:
        p(f"Sorry, I do not understand, please define your weight if it's 'Kg' or 'Lbs'.")
